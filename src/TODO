☐ Discover and Monitor Cgreen Test Files:
    ✔ Implement logic to discover .so files that are potential Cgreen tests. @done(23-12-04 22:07)
    ☐ Use VS Code's file system watchers to monitor these files for changes

☐ Automatically Run Tests on Change:
    ☐ Upon detection of changes in .so files, automatically run cgreen-runner with the XML option.
    ☐ Consider strategies for debouncing or throttling test runs to optimize performance.

☐ Handle XML Test Result Files:
    ☐ Discover XML files generated by cgreen-runner.
    ☐ Parse these XML files to extract test results.
    ☐ Update the Test Explorer in VS Code with the test results, reflecting the status of each test.

☐ Maintain Test Hierarchy:
    ☐ Accurately represent the test hierarchy and structure as reported in the XML files in the Test Explorer.

☐ User Control
    ☐ Refresh workspace to re-initialize list of Cgreen test files and XML result files or watch for new `.so` files not already discovered
    ☐ Manual Trigger for Test Runs: Provide commands or buttons in VS Code for users to manually trigger test runs.
    ☐ Selective Test Execution: Investigate methods to map XML results back to specific .so files, possibly using naming conventions, metadata, or other strategies.
    ☐ Configuration Options: Offer settings for users to configure the behavior of test discovery and execution, such as paths to include or exclude, test run frequency, etc.